// <auto-generated />
using System;
using CTTProject.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTTProject.Migrations
{
    [DbContext(typeof(ProjectDb))]
    [Migration("20221204201606_CTTProject")]
    partial class CTTProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CTTProject.Models.Backer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FundsAdded")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Backers");
                });

            modelBuilder.Entity("CTTProject.Models.Creator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("CTTProject.Models.Funds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("FundBackerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FundBackerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("CTTProject.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProjectFundProgress")
                        .HasColumnType("float");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CTTProject.Models.Funds", b =>
                {
                    b.HasOne("CTTProject.Models.Backer", "FundBacker")
                        .WithMany("FundList")
                        .HasForeignKey("FundBackerId");

                    b.HasOne("CTTProject.Models.Project", "Project")
                        .WithMany("Funds")
                        .HasForeignKey("ProjectId");

                    b.Navigation("FundBacker");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CTTProject.Models.Project", b =>
                {
                    b.HasOne("CTTProject.Models.Creator", "Creator")
                        .WithMany("Projects")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("CTTProject.Models.Backer", b =>
                {
                    b.Navigation("FundList");
                });

            modelBuilder.Entity("CTTProject.Models.Creator", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CTTProject.Models.Project", b =>
                {
                    b.Navigation("Funds");
                });
#pragma warning restore 612, 618
        }
    }
}
